// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package scanner;

option go_package = "scannerpb";

import "google/protobuf/timestamp.proto";

// This file contains all objects needed by Nmap for :
// - Giving information about an ongoing scan
// - Parsing its results


// NmapScan - Represents a Nmap scan before, after or while being run. 
message NmapScan {
        
}


// NmapScript - Represents a Nmap Scripting Engine Script.
// The inner elements can be an arbitrary collection of Tables and Elements. They can be empty
message NmapScript {
        // General
        uint32 ID = 1;
        uint32 PortID = 2;
        // @inject_tag: xml:"output,attr"
        string Output = 3;
        // @inject_tag: xml:"elem,omitempty"
        repeated Element Elements = 4;
        // @inject_tag: xml:"table,omitempty"
        repeated Table Tables = 5;
        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;
}

// elements - The smallest building block for scripts/tables. Key is optional
message Element {
        // @inject_tag: xml:"key,attr,omitempty"
        string Key = 1;
        // @inject_tag: xml:",innerxml"
        string Value = 2;
}

// Table - An arbitrary collection of (sub-)Tables and Elements. Can be empty
message Table {
        // @inject_tag: xml:"key,attr,omitempty"
        string Key = 1;
        // @inject_tag: xml:"table,omitempty"
        repeated Table Tables = 2;
        // @inject_tag: xml:"elem,omitempty"
        repeated Element Elements = 3;
}
