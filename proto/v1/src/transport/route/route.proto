// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package transport.route;

option go_package = "routepb";

import "transport/route/node.proto";

// Protocol - All protocol available for a route
enum Protocol {
        UDP = 0;
        SOCKS5 = 1;
        SSH = 2;
}

// Route - A chain of nodes to use as proxies for a communication
message Route {
        uint32 ID = 1;               // In case two end nodes serve the same subnet (ex: twice 192.168.1.1/24)
        repeated route.Node Nodes = 2;
}

// Start a route
message OpenRouteRequest {
        uint32 GhostID = 1;
        Route Route = 2;
}

message OpenRoute {
        bool Success = 1;
        string Err = 2;
}


// Close a route
message CloseRouteRequest {
        uint32 GhostID = 1;
        int64 ID = 2;
        string Subnet = 3;          // If subnet is not "", find matches.
        bool Force = 4;
}

message CloseRoute {
        bool Success = 1;
        string Err = 2;
        string Warning = 3;
}
