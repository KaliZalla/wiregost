// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

package db;

option go_package = "dbpb";

import "google/protobuf/timestamp.proto";

// The credential model in Wiregost is heavily inspired from Metasploit's credential
// architecture & management.

// Credential - Base object for a credential in Wiregost.
message Credential {
        uint32 ID = 1;
        // @inject_tag: gorm:"not null"
        uint32 OriginID = 2;            // A credential core has one origin
        string OriginType = 3;          // For polymorphic associations
        uint32 PrivateID = 4;
        uint32 PublicID = 5;
        uint32 RealmID = 6;
        // @inject_tag: gorm:"not null"
        uint32 WorkspaceID = 7;
        int32 LoginsCount = 8;

        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;

}

// CredentialPublic - A publicly disclosed credential (ex: username)
message CredentialPublic {
        uint32 ID = 1;
        // @inject_tag: gorm:"not null"
        string Username = 2;
        // @inject_tag: gorm:"not null"
        string Type = 3;

        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;
}

// CredentialPrivate - Any credential that should not be publicly exposed.
message CredentialPrivate {
        // @inject_tag: gorm:"not null"
        string Type = 1;
        // @inject_tag: gorm:"not null"
        string Value = 2;
        string JTRFormat = 3;

        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;
}

// CredentialRealm - The realm in which a CredentialPublic can be used to authenticate
// or from which a CredentialPrivate was looted.
message CredentialRealm {
        uint32 ID = 1;
        // @inject_tag: gorm:"not null"
        string Key = 2;
        // @inject_tag: gorm:"not null"
        string Value = 3;

        // Timestamp
        google.protobuf.Timestamp CreatedAt = 38;
        google.protobuf.Timestamp UpdatedAt = 39;

}

// CredentialOrigin - Information on provenance of the credential
message CredentialOrigin {
        
}

enum OriginType {
        MANUAL = 0;
        IMPORT = 1;
        SERVICE = 2;
        SESSION = 3;
        CRACKED = 4;
}

