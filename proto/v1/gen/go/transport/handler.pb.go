// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.8.0
// source: transport/handler.proto

package transportpb

import (
	server "../gen/go/server"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Permissions - Who has the right to kill a listener
type Permissions int32

const (
	Permissions_OWNER Permissions = 0
	Permissions_ADMIN Permissions = 1
	Permissions_ALL   Permissions = 2
)

// Enum value maps for Permissions.
var (
	Permissions_name = map[int32]string{
		0: "OWNER",
		1: "ADMIN",
		2: "ALL",
	}
	Permissions_value = map[string]int32{
		"OWNER": 0,
		"ADMIN": 1,
		"ALL":   2,
	}
)

func (x Permissions) Enum() *Permissions {
	p := new(Permissions)
	*p = x
	return p
}

func (x Permissions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permissions) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_handler_proto_enumTypes[0].Descriptor()
}

func (Permissions) Type() protoreflect.EnumType {
	return &file_transport_handler_proto_enumTypes[0]
}

func (x Permissions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permissions.Descriptor instead.
func (Permissions) EnumDescriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{0}
}

// Start a listener either on the server, or on an implant
type StartReverseHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Listener *Listener `protobuf:"bytes,1,opt,name=Listener,proto3" json:"Listener,omitempty"`
	Persist  bool      `protobuf:"varint,2,opt,name=Persist,proto3" json:"Persist,omitempty"`
}

func (x *StartReverseHandlerRequest) Reset() {
	*x = StartReverseHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReverseHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReverseHandlerRequest) ProtoMessage() {}

func (x *StartReverseHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReverseHandlerRequest.ProtoReflect.Descriptor instead.
func (*StartReverseHandlerRequest) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{0}
}

func (x *StartReverseHandlerRequest) GetListener() *Listener {
	if x != nil {
		return x.Listener
	}
	return nil
}

func (x *StartReverseHandlerRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

type StartReverseHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *StartReverseHandler) Reset() {
	*x = StartReverseHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReverseHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReverseHandler) ProtoMessage() {}

func (x *StartReverseHandler) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReverseHandler.ProtoReflect.Descriptor instead.
func (*StartReverseHandler) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{1}
}

func (x *StartReverseHandler) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartReverseHandler) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// Stop a reverse handler listener on the server or implant
type StopReverseHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *StopReverseHandlerRequest) Reset() {
	*x = StopReverseHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopReverseHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReverseHandlerRequest) ProtoMessage() {}

func (x *StopReverseHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReverseHandlerRequest.ProtoReflect.Descriptor instead.
func (*StopReverseHandlerRequest) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{2}
}

func (x *StopReverseHandlerRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type StopReverseHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *StopReverseHandler) Reset() {
	*x = StopReverseHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopReverseHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReverseHandler) ProtoMessage() {}

func (x *StopReverseHandler) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReverseHandler.ProtoReflect.Descriptor instead.
func (*StopReverseHandler) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{3}
}

func (x *StopReverseHandler) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopReverseHandler) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// Bind to a reverse listener runned by an implant
type StartBindHandlerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol Protocol `protobuf:"varint,1,opt,name=Protocol,proto3,enum=transport.Protocol" json:"Protocol,omitempty"`
	RHost    string   `protobuf:"bytes,2,opt,name=RHost,proto3" json:"RHost,omitempty"`
	RPort    uint32   `protobuf:"varint,3,opt,name=RPort,proto3" json:"RPort,omitempty"`
	GhostID  uint32   `protobuf:"varint,4,opt,name=GhostID,proto3" json:"GhostID,omitempty"` // In case two same addresses for two ghosts
}

func (x *StartBindHandlerRequest) Reset() {
	*x = StartBindHandlerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBindHandlerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBindHandlerRequest) ProtoMessage() {}

func (x *StartBindHandlerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBindHandlerRequest.ProtoReflect.Descriptor instead.
func (*StartBindHandlerRequest) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{4}
}

func (x *StartBindHandlerRequest) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_MTLS
}

func (x *StartBindHandlerRequest) GetRHost() string {
	if x != nil {
		return x.RHost
	}
	return ""
}

func (x *StartBindHandlerRequest) GetRPort() uint32 {
	if x != nil {
		return x.RPort
	}
	return 0
}

func (x *StartBindHandlerRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

type StartBindHandler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *StartBindHandler) Reset() {
	*x = StartBindHandler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBindHandler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBindHandler) ProtoMessage() {}

func (x *StartBindHandler) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBindHandler.ProtoReflect.Descriptor instead.
func (*StartBindHandler) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{5}
}

func (x *StartBindHandler) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartBindHandler) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// Listener - A reverse handler, for any protocol and source
type Listener struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Protocol    Protocol     `protobuf:"varint,1,opt,name=Protocol,proto3,enum=transport.Protocol" json:"Protocol,omitempty"`
	LHost       string       `protobuf:"bytes,2,opt,name=LHost,proto3" json:"LHost,omitempty"`
	LPort       uint32       `protobuf:"varint,3,opt,name=LPort,proto3" json:"LPort,omitempty"`
	RHost       string       `protobuf:"bytes,4,opt,name=RHost,proto3" json:"RHost,omitempty"`
	RPort       uint32       `protobuf:"varint,5,opt,name=RPort,proto3" json:"RPort,omitempty"`
	GhostID     uint32       `protobuf:"varint,6,opt,name=GhostID,proto3" json:"GhostID,omitempty"` // In case two same addresses for two ghosts
	Owner       *server.User `protobuf:"bytes,7,opt,name=Owner,proto3" json:"Owner,omitempty"`
	Permissions Permissions  `protobuf:"varint,8,opt,name=Permissions,proto3,enum=transport.Permissions" json:"Permissions,omitempty"`
	// Timestamp
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,38,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,39,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Listener) Reset() {
	*x = Listener{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_handler_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Listener) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Listener) ProtoMessage() {}

func (x *Listener) ProtoReflect() protoreflect.Message {
	mi := &file_transport_handler_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Listener.ProtoReflect.Descriptor instead.
func (*Listener) Descriptor() ([]byte, []int) {
	return file_transport_handler_proto_rawDescGZIP(), []int{6}
}

func (x *Listener) GetProtocol() Protocol {
	if x != nil {
		return x.Protocol
	}
	return Protocol_MTLS
}

func (x *Listener) GetLHost() string {
	if x != nil {
		return x.LHost
	}
	return ""
}

func (x *Listener) GetLPort() uint32 {
	if x != nil {
		return x.LPort
	}
	return 0
}

func (x *Listener) GetRHost() string {
	if x != nil {
		return x.RHost
	}
	return ""
}

func (x *Listener) GetRPort() uint32 {
	if x != nil {
		return x.RPort
	}
	return 0
}

func (x *Listener) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *Listener) GetOwner() *server.User {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *Listener) GetPermissions() Permissions {
	if x != nil {
		return x.Permissions
	}
	return Permissions_OWNER
}

func (x *Listener) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Listener) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_transport_handler_proto protoreflect.FileDescriptor

var file_transport_handler_proto_rawDesc = []byte{
	0x0a, 0x17, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x1a, 0x19, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x67, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x76, 0x65,
	0x72, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x22, 0x41, 0x0a, 0x13,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x22,
	0x2b, 0x0a, 0x19, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x12,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x76, 0x65, 0x72, 0x73, 0x65, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x22, 0x90,
	0x01, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x08, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x22, 0x3e, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x48, 0x61,
	0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72,
	0x72, 0x22, 0xff, 0x02, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x52, 0x48, 0x6f, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x52, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x26, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x2a, 0x2c, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10,
	0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_handler_proto_rawDescOnce sync.Once
	file_transport_handler_proto_rawDescData = file_transport_handler_proto_rawDesc
)

func file_transport_handler_proto_rawDescGZIP() []byte {
	file_transport_handler_proto_rawDescOnce.Do(func() {
		file_transport_handler_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_handler_proto_rawDescData)
	})
	return file_transport_handler_proto_rawDescData
}

var file_transport_handler_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transport_handler_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_transport_handler_proto_goTypes = []interface{}{
	(Permissions)(0),                   // 0: transport.Permissions
	(*StartReverseHandlerRequest)(nil), // 1: transport.StartReverseHandlerRequest
	(*StartReverseHandler)(nil),        // 2: transport.StartReverseHandler
	(*StopReverseHandlerRequest)(nil),  // 3: transport.StopReverseHandlerRequest
	(*StopReverseHandler)(nil),         // 4: transport.StopReverseHandler
	(*StartBindHandlerRequest)(nil),    // 5: transport.StartBindHandlerRequest
	(*StartBindHandler)(nil),           // 6: transport.StartBindHandler
	(*Listener)(nil),                   // 7: transport.Listener
	(Protocol)(0),                      // 8: transport.Protocol
	(*server.User)(nil),                // 9: server.User
	(*timestamp.Timestamp)(nil),        // 10: google.protobuf.Timestamp
}
var file_transport_handler_proto_depIdxs = []int32{
	7,  // 0: transport.StartReverseHandlerRequest.Listener:type_name -> transport.Listener
	8,  // 1: transport.StartBindHandlerRequest.Protocol:type_name -> transport.Protocol
	8,  // 2: transport.Listener.Protocol:type_name -> transport.Protocol
	9,  // 3: transport.Listener.Owner:type_name -> server.User
	0,  // 4: transport.Listener.Permissions:type_name -> transport.Permissions
	10, // 5: transport.Listener.CreatedAt:type_name -> google.protobuf.Timestamp
	10, // 6: transport.Listener.UpdatedAt:type_name -> google.protobuf.Timestamp
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_transport_handler_proto_init() }
func file_transport_handler_proto_init() {
	if File_transport_handler_proto != nil {
		return
	}
	file_transport_transport_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_transport_handler_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReverseHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_handler_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReverseHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_handler_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopReverseHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_handler_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopReverseHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_handler_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBindHandlerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_handler_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBindHandler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_handler_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Listener); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_handler_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_handler_proto_goTypes,
		DependencyIndexes: file_transport_handler_proto_depIdxs,
		EnumInfos:         file_transport_handler_proto_enumTypes,
		MessageInfos:      file_transport_handler_proto_msgTypes,
	}.Build()
	File_transport_handler_proto = out.File
	file_transport_handler_proto_rawDesc = nil
	file_transport_handler_proto_goTypes = nil
	file_transport_handler_proto_depIdxs = nil
}
