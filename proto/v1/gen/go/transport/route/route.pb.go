// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.8.0
// source: transport/route/route.proto

package routepb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Protocol - All protocol available for a route
type Protocol int32

const (
	Protocol_UDP    Protocol = 0
	Protocol_SOCKS5 Protocol = 1
	Protocol_SSH    Protocol = 2
)

// Enum value maps for Protocol.
var (
	Protocol_name = map[int32]string{
		0: "UDP",
		1: "SOCKS5",
		2: "SSH",
	}
	Protocol_value = map[string]int32{
		"UDP":    0,
		"SOCKS5": 1,
		"SSH":    2,
	}
)

func (x Protocol) Enum() *Protocol {
	p := new(Protocol)
	*p = x
	return p
}

func (x Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_route_route_proto_enumTypes[0].Descriptor()
}

func (Protocol) Type() protoreflect.EnumType {
	return &file_transport_route_route_proto_enumTypes[0]
}

func (x Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Protocol.Descriptor instead.
func (Protocol) EnumDescriptor() ([]byte, []int) {
	return file_transport_route_route_proto_rawDescGZIP(), []int{0}
}

// Route - A chain of nodes to use as proxies for a communication
type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID    int64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"` // In case two end nodes serve the same subnet (ex: twice 192.168.1.1/24)
	Nodes []*Node `protobuf:"bytes,2,rep,name=Nodes,proto3" json:"Nodes,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_route_route_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_transport_route_route_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_transport_route_route_proto_rawDescGZIP(), []int{0}
}

func (x *Route) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Route) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// Start a route
type OpenRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID uint32 `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	Route   *Route `protobuf:"bytes,2,opt,name=Route,proto3" json:"Route,omitempty"`
}

func (x *OpenRouteRequest) Reset() {
	*x = OpenRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_route_route_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRouteRequest) ProtoMessage() {}

func (x *OpenRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_route_route_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRouteRequest.ProtoReflect.Descriptor instead.
func (*OpenRouteRequest) Descriptor() ([]byte, []int) {
	return file_transport_route_route_proto_rawDescGZIP(), []int{1}
}

func (x *OpenRouteRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *OpenRouteRequest) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

type OpenRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *OpenRoute) Reset() {
	*x = OpenRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_route_route_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRoute) ProtoMessage() {}

func (x *OpenRoute) ProtoReflect() protoreflect.Message {
	mi := &file_transport_route_route_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRoute.ProtoReflect.Descriptor instead.
func (*OpenRoute) Descriptor() ([]byte, []int) {
	return file_transport_route_route_proto_rawDescGZIP(), []int{2}
}

func (x *OpenRoute) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OpenRoute) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// Close a route
type CloseRouteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID uint32 `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	ID      int64  `protobuf:"varint,2,opt,name=ID,proto3" json:"ID,omitempty"`
	Subnet  string `protobuf:"bytes,3,opt,name=Subnet,proto3" json:"Subnet,omitempty"` // If subnet is not "", find matches.
	Force   bool   `protobuf:"varint,4,opt,name=Force,proto3" json:"Force,omitempty"`
}

func (x *CloseRouteRequest) Reset() {
	*x = CloseRouteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_route_route_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRouteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRouteRequest) ProtoMessage() {}

func (x *CloseRouteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_route_route_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRouteRequest.ProtoReflect.Descriptor instead.
func (*CloseRouteRequest) Descriptor() ([]byte, []int) {
	return file_transport_route_route_proto_rawDescGZIP(), []int{3}
}

func (x *CloseRouteRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *CloseRouteRequest) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CloseRouteRequest) GetSubnet() string {
	if x != nil {
		return x.Subnet
	}
	return ""
}

func (x *CloseRouteRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type CloseRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
	Warning string `protobuf:"bytes,3,opt,name=Warning,proto3" json:"Warning,omitempty"`
}

func (x *CloseRoute) Reset() {
	*x = CloseRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_route_route_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRoute) ProtoMessage() {}

func (x *CloseRoute) ProtoReflect() protoreflect.Message {
	mi := &file_transport_route_route_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRoute.ProtoReflect.Descriptor instead.
func (*CloseRoute) Descriptor() ([]byte, []int) {
	return file_transport_route_route_proto_rawDescGZIP(), []int{4}
}

func (x *CloseRoute) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CloseRoute) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *CloseRoute) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

var File_transport_route_route_proto protoreflect.FileDescriptor

var file_transport_route_route_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x72, 0x6f, 0x75, 0x74,
	0x65, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x1a, 0x1a,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x05, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x5a, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x22, 0x37, 0x0a, 0x09,
	0x4f, 0x70, 0x65, 0x6e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x45, 0x72, 0x72, 0x22, 0x6b, 0x0a, 0x11, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x75, 0x62, 0x6e, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x22, 0x52, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2a, 0x28, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x53,
	0x4f, 0x43, 0x4b, 0x53, 0x35, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x48, 0x10, 0x02,
	0x42, 0x09, 0x5a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_transport_route_route_proto_rawDescOnce sync.Once
	file_transport_route_route_proto_rawDescData = file_transport_route_route_proto_rawDesc
)

func file_transport_route_route_proto_rawDescGZIP() []byte {
	file_transport_route_route_proto_rawDescOnce.Do(func() {
		file_transport_route_route_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_route_route_proto_rawDescData)
	})
	return file_transport_route_route_proto_rawDescData
}

var file_transport_route_route_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transport_route_route_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_transport_route_route_proto_goTypes = []interface{}{
	(Protocol)(0),             // 0: transport.route.Protocol
	(*Route)(nil),             // 1: transport.route.Route
	(*OpenRouteRequest)(nil),  // 2: transport.route.OpenRouteRequest
	(*OpenRoute)(nil),         // 3: transport.route.OpenRoute
	(*CloseRouteRequest)(nil), // 4: transport.route.CloseRouteRequest
	(*CloseRoute)(nil),        // 5: transport.route.CloseRoute
	(*Node)(nil),              // 6: transport.route.Node
}
var file_transport_route_route_proto_depIdxs = []int32{
	6, // 0: transport.route.Route.Nodes:type_name -> transport.route.Node
	1, // 1: transport.route.OpenRouteRequest.Route:type_name -> transport.route.Route
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_transport_route_route_proto_init() }
func file_transport_route_route_proto_init() {
	if File_transport_route_route_proto != nil {
		return
	}
	file_transport_route_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_transport_route_route_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_route_route_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_route_route_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_route_route_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRouteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_route_route_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_route_route_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_route_route_proto_goTypes,
		DependencyIndexes: file_transport_route_route_proto_depIdxs,
		EnumInfos:         file_transport_route_route_proto_enumTypes,
		MessageInfos:      file_transport_route_route_proto_msgTypes,
	}.Build()
	File_transport_route_route_proto = out.File
	file_transport_route_route_proto_rawDesc = nil
	file_transport_route_route_proto_goTypes = nil
	file_transport_route_route_proto_depIdxs = nil
}
