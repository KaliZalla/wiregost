// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.8.0
// source: db/credential.proto

package dbpb

import (
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type OriginType int32

const (
	OriginType_MANUAL  OriginType = 0
	OriginType_IMPORT  OriginType = 1
	OriginType_SERVICE OriginType = 2
	OriginType_SESSION OriginType = 3
	OriginType_CRACKED OriginType = 4
)

// Enum value maps for OriginType.
var (
	OriginType_name = map[int32]string{
		0: "MANUAL",
		1: "IMPORT",
		2: "SERVICE",
		3: "SESSION",
		4: "CRACKED",
	}
	OriginType_value = map[string]int32{
		"MANUAL":  0,
		"IMPORT":  1,
		"SERVICE": 2,
		"SESSION": 3,
		"CRACKED": 4,
	}
)

func (x OriginType) Enum() *OriginType {
	p := new(OriginType)
	*p = x
	return p
}

func (x OriginType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OriginType) Descriptor() protoreflect.EnumDescriptor {
	return file_db_credential_proto_enumTypes[0].Descriptor()
}

func (OriginType) Type() protoreflect.EnumType {
	return &file_db_credential_proto_enumTypes[0]
}

func (x OriginType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OriginType.Descriptor instead.
func (OriginType) EnumDescriptor() ([]byte, []int) {
	return file_db_credential_proto_rawDescGZIP(), []int{0}
}

// Credential - Base object for a credential in Wiregost.
type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// @inject_tag: gorm:"not null"
	OriginID   uint32 `protobuf:"varint,2,opt,name=OriginID,proto3" json:"OriginID,omitempty" gorm:"not null"`    // A credential core has one origin
	OriginType string `protobuf:"bytes,3,opt,name=OriginType,proto3" json:"OriginType,omitempty"` // For polymorphic associations
	PrivateID  uint32 `protobuf:"varint,4,opt,name=PrivateID,proto3" json:"PrivateID,omitempty"`
	PublicID   uint32 `protobuf:"varint,5,opt,name=PublicID,proto3" json:"PublicID,omitempty"`
	RealmID    uint32 `protobuf:"varint,6,opt,name=RealmID,proto3" json:"RealmID,omitempty"`
	// @inject_tag: gorm:"not null"
	WorkspaceID uint32 `protobuf:"varint,7,opt,name=WorkspaceID,proto3" json:"WorkspaceID,omitempty" gorm:"not null"`
	LoginsCount int32  `protobuf:"varint,8,opt,name=LoginsCount,proto3" json:"LoginsCount,omitempty"`
	// Timestamp
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,38,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,39,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_credential_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_db_credential_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_db_credential_proto_rawDescGZIP(), []int{0}
}

func (x *Credential) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Credential) GetOriginID() uint32 {
	if x != nil {
		return x.OriginID
	}
	return 0
}

func (x *Credential) GetOriginType() string {
	if x != nil {
		return x.OriginType
	}
	return ""
}

func (x *Credential) GetPrivateID() uint32 {
	if x != nil {
		return x.PrivateID
	}
	return 0
}

func (x *Credential) GetPublicID() uint32 {
	if x != nil {
		return x.PublicID
	}
	return 0
}

func (x *Credential) GetRealmID() uint32 {
	if x != nil {
		return x.RealmID
	}
	return 0
}

func (x *Credential) GetWorkspaceID() uint32 {
	if x != nil {
		return x.WorkspaceID
	}
	return 0
}

func (x *Credential) GetLoginsCount() int32 {
	if x != nil {
		return x.LoginsCount
	}
	return 0
}

func (x *Credential) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Credential) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// CredentialPublic - A publicly disclosed credential (ex: username)
type CredentialPublic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// @inject_tag: gorm:"not null"
	Username string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty" gorm:"not null"`
	// @inject_tag: gorm:"not null"
	Type string `protobuf:"bytes,3,opt,name=Type,proto3" json:"Type,omitempty" gorm:"not null"`
	// Timestamp
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,38,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,39,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *CredentialPublic) Reset() {
	*x = CredentialPublic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_credential_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialPublic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialPublic) ProtoMessage() {}

func (x *CredentialPublic) ProtoReflect() protoreflect.Message {
	mi := &file_db_credential_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialPublic.ProtoReflect.Descriptor instead.
func (*CredentialPublic) Descriptor() ([]byte, []int) {
	return file_db_credential_proto_rawDescGZIP(), []int{1}
}

func (x *CredentialPublic) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CredentialPublic) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CredentialPublic) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CredentialPublic) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CredentialPublic) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// CredentialPrivate - Any credential that should not be publicly exposed.
type CredentialPrivate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: gorm:"not null"
	Type string `protobuf:"bytes,1,opt,name=Type,proto3" json:"Type,omitempty" gorm:"not null"`
	// @inject_tag: gorm:"not null"
	Value     string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty" gorm:"not null"`
	JTRFormat string `protobuf:"bytes,3,opt,name=JTRFormat,proto3" json:"JTRFormat,omitempty"`
	// Timestamp
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,38,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,39,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *CredentialPrivate) Reset() {
	*x = CredentialPrivate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_credential_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialPrivate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialPrivate) ProtoMessage() {}

func (x *CredentialPrivate) ProtoReflect() protoreflect.Message {
	mi := &file_db_credential_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialPrivate.ProtoReflect.Descriptor instead.
func (*CredentialPrivate) Descriptor() ([]byte, []int) {
	return file_db_credential_proto_rawDescGZIP(), []int{2}
}

func (x *CredentialPrivate) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CredentialPrivate) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CredentialPrivate) GetJTRFormat() string {
	if x != nil {
		return x.JTRFormat
	}
	return ""
}

func (x *CredentialPrivate) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CredentialPrivate) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// CredentialRealm - The realm in which a CredentialPublic can be used to authenticate
// or from which a CredentialPrivate was looted.
type CredentialRealm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// @inject_tag: gorm:"not null"
	Key string `protobuf:"bytes,2,opt,name=Key,proto3" json:"Key,omitempty" gorm:"not null"`
	// @inject_tag: gorm:"not null"
	Value string `protobuf:"bytes,3,opt,name=Value,proto3" json:"Value,omitempty" gorm:"not null"`
	// Timestamp
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,38,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,39,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *CredentialRealm) Reset() {
	*x = CredentialRealm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_credential_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialRealm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialRealm) ProtoMessage() {}

func (x *CredentialRealm) ProtoReflect() protoreflect.Message {
	mi := &file_db_credential_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialRealm.ProtoReflect.Descriptor instead.
func (*CredentialRealm) Descriptor() ([]byte, []int) {
	return file_db_credential_proto_rawDescGZIP(), []int{3}
}

func (x *CredentialRealm) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CredentialRealm) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CredentialRealm) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *CredentialRealm) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CredentialRealm) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// CredentialOrigin - Information on provenance of the credential
type CredentialOrigin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CredentialOrigin) Reset() {
	*x = CredentialOrigin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_db_credential_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialOrigin) ProtoMessage() {}

func (x *CredentialOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_db_credential_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialOrigin.ProtoReflect.Descriptor instead.
func (*CredentialOrigin) Descriptor() ([]byte, []int) {
	return file_db_credential_proto_rawDescGZIP(), []int{4}
}

var File_db_credential_proto protoreflect.FileDescriptor

var file_db_credential_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x62, 0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x64, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x02, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x44, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x52, 0x65, 0x61, 0x6c, 0x6d, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x57, 0x6f, 0x72,
	0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b,
	0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xc6, 0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x54,
	0x52, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a,
	0x54, 0x52, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbd, 0x01, 0x0a,
	0x0f, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x6d,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x12, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x2a, 0x4b, 0x0a, 0x0a, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4d,
	0x50, 0x4f, 0x52, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x03,
	0x12, 0x0b, 0x0a, 0x07, 0x43, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x04, 0x42, 0x06, 0x5a,
	0x04, 0x64, 0x62, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_db_credential_proto_rawDescOnce sync.Once
	file_db_credential_proto_rawDescData = file_db_credential_proto_rawDesc
)

func file_db_credential_proto_rawDescGZIP() []byte {
	file_db_credential_proto_rawDescOnce.Do(func() {
		file_db_credential_proto_rawDescData = protoimpl.X.CompressGZIP(file_db_credential_proto_rawDescData)
	})
	return file_db_credential_proto_rawDescData
}

var file_db_credential_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_db_credential_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_db_credential_proto_goTypes = []interface{}{
	(OriginType)(0),             // 0: db.OriginType
	(*Credential)(nil),          // 1: db.Credential
	(*CredentialPublic)(nil),    // 2: db.CredentialPublic
	(*CredentialPrivate)(nil),   // 3: db.CredentialPrivate
	(*CredentialRealm)(nil),     // 4: db.CredentialRealm
	(*CredentialOrigin)(nil),    // 5: db.CredentialOrigin
	(*timestamp.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_db_credential_proto_depIdxs = []int32{
	6, // 0: db.Credential.CreatedAt:type_name -> google.protobuf.Timestamp
	6, // 1: db.Credential.UpdatedAt:type_name -> google.protobuf.Timestamp
	6, // 2: db.CredentialPublic.CreatedAt:type_name -> google.protobuf.Timestamp
	6, // 3: db.CredentialPublic.UpdatedAt:type_name -> google.protobuf.Timestamp
	6, // 4: db.CredentialPrivate.CreatedAt:type_name -> google.protobuf.Timestamp
	6, // 5: db.CredentialPrivate.UpdatedAt:type_name -> google.protobuf.Timestamp
	6, // 6: db.CredentialRealm.CreatedAt:type_name -> google.protobuf.Timestamp
	6, // 7: db.CredentialRealm.UpdatedAt:type_name -> google.protobuf.Timestamp
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_db_credential_proto_init() }
func file_db_credential_proto_init() {
	if File_db_credential_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_db_credential_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_credential_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialPublic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_credential_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialPrivate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_credential_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialRealm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_db_credential_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialOrigin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_db_credential_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_db_credential_proto_goTypes,
		DependencyIndexes: file_db_credential_proto_depIdxs,
		EnumInfos:         file_db_credential_proto_enumTypes,
		MessageInfos:      file_db_credential_proto_msgTypes,
	}.Build()
	File_db_credential_proto = out.File
	file_db_credential_proto_rawDesc = nil
	file_db_credential_proto_goTypes = nil
	file_db_credential_proto_depIdxs = nil
}
