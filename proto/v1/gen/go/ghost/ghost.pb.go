// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.8.0
// source: ghost/ghost.proto

package ghostpb

import (
	server "../gen/go/server"
	transport "../gen/go/transport"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Permissions - Who has the right to interact/kill an implant
type Permissions int32

const (
	Permissions_OWNER Permissions = 0
	Permissions_ADMIN Permissions = 1
	Permissions_ALL   Permissions = 2
)

// Enum value maps for Permissions.
var (
	Permissions_name = map[int32]string{
		0: "OWNER",
		1: "ADMIN",
		2: "ALL",
	}
	Permissions_value = map[string]int32{
		"OWNER": 0,
		"ADMIN": 1,
		"ALL":   2,
	}
)

func (x Permissions) Enum() *Permissions {
	p := new(Permissions)
	*p = x
	return p
}

func (x Permissions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Permissions) Descriptor() protoreflect.EnumDescriptor {
	return file_ghost_ghost_proto_enumTypes[0].Descriptor()
}

func (Permissions) Type() protoreflect.EnumType {
	return &file_ghost_ghost_proto_enumTypes[0]
}

func (x Permissions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Permissions.Descriptor instead.
func (Permissions) EnumDescriptor() ([]byte, []int) {
	return file_ghost_ghost_proto_rawDescGZIP(), []int{0}
}

// Ghost - Server-side object representing a connected ghost implant.
type Ghost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint32                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Hostname    string                 `protobuf:"bytes,3,opt,name=Hostname,proto3" json:"Hostname,omitempty"` // Either this or a HostID or a string
	Username    string                 `protobuf:"bytes,4,opt,name=Username,proto3" json:"Username,omitempty"`
	UID         string                 `protobuf:"bytes,5,opt,name=UID,proto3" json:"UID,omitempty"`
	GID         string                 `protobuf:"bytes,6,opt,name=GID,proto3" json:"GID,omitempty"`
	OS          string                 `protobuf:"bytes,7,opt,name=OS,proto3" json:"OS,omitempty"`
	Arch        string                 `protobuf:"bytes,8,opt,name=Arch,proto3" json:"Arch,omitempty"`
	PID         int32                  `protobuf:"varint,9,opt,name=PID,proto3" json:"PID,omitempty"`
	Filename    string                 `protobuf:"bytes,10,opt,name=Filename,proto3" json:"Filename,omitempty"`
	LastCheckin string                 `protobuf:"bytes,11,opt,name=LastCheckin,proto3" json:"LastCheckin,omitempty"`
	Version     string                 `protobuf:"bytes,12,opt,name=Version,proto3" json:"Version,omitempty"` // Should include various things (git comm, buildVer, protoVer)
	WorkspaceID uint32                 `protobuf:"varint,13,opt,name=WorkspaceID,proto3" json:"WorkspaceID,omitempty"`
	Transports  []*transport.Transport `protobuf:"bytes,14,rep,name=Transports,proto3" json:"Transports,omitempty"`                           // Find a way to get the active one
	Permissions Permissions            `protobuf:"varint,15,opt,name=Permissions,proto3,enum=ghost.Permissions" json:"Permissions,omitempty"` // Ownership permissions on the implant
	Owner       *server.User           `protobuf:"bytes,16,opt,name=Owner,proto3" json:"Owner,omitempty"`                                     // User who owns this ghost implant
}

func (x *Ghost) Reset() {
	*x = Ghost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_ghost_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ghost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ghost) ProtoMessage() {}

func (x *Ghost) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_ghost_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ghost.ProtoReflect.Descriptor instead.
func (*Ghost) Descriptor() ([]byte, []int) {
	return file_ghost_ghost_proto_rawDescGZIP(), []int{0}
}

func (x *Ghost) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Ghost) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Ghost) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Ghost) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Ghost) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *Ghost) GetGID() string {
	if x != nil {
		return x.GID
	}
	return ""
}

func (x *Ghost) GetOS() string {
	if x != nil {
		return x.OS
	}
	return ""
}

func (x *Ghost) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Ghost) GetPID() int32 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *Ghost) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Ghost) GetLastCheckin() string {
	if x != nil {
		return x.LastCheckin
	}
	return ""
}

func (x *Ghost) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Ghost) GetWorkspaceID() uint32 {
	if x != nil {
		return x.WorkspaceID
	}
	return 0
}

func (x *Ghost) GetTransports() []*transport.Transport {
	if x != nil {
		return x.Transports
	}
	return nil
}

func (x *Ghost) GetPermissions() Permissions {
	if x != nil {
		return x.Permissions
	}
	return Permissions_OWNER
}

func (x *Ghost) GetOwner() *server.User {
	if x != nil {
		return x.Owner
	}
	return nil
}

// ChangePermissionsRequest - Change the permissions of an implant at runtime
type ChangePermissionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID     uint32      `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	Permissions Permissions `protobuf:"varint,2,opt,name=Permissions,proto3,enum=ghost.Permissions" json:"Permissions,omitempty"`
}

func (x *ChangePermissionsRequest) Reset() {
	*x = ChangePermissionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_ghost_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePermissionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePermissionsRequest) ProtoMessage() {}

func (x *ChangePermissionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_ghost_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePermissionsRequest.ProtoReflect.Descriptor instead.
func (*ChangePermissionsRequest) Descriptor() ([]byte, []int) {
	return file_ghost_ghost_proto_rawDescGZIP(), []int{1}
}

func (x *ChangePermissionsRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *ChangePermissionsRequest) GetPermissions() Permissions {
	if x != nil {
		return x.Permissions
	}
	return Permissions_OWNER
}

// this is a sentence
type ChangePermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Err     string `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *ChangePermissions) Reset() {
	*x = ChangePermissions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_ghost_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePermissions) ProtoMessage() {}

func (x *ChangePermissions) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_ghost_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePermissions.ProtoReflect.Descriptor instead.
func (*ChangePermissions) Descriptor() ([]byte, []int) {
	return file_ghost_ghost_proto_rawDescGZIP(), []int{2}
}

func (x *ChangePermissions) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ChangePermissions) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

var File_ghost_ghost_proto protoreflect.FileDescriptor

var file_ghost_ghost_proto_rawDesc = []byte{
	0x0a, 0x11, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x1a, 0x19, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x03, 0x0a, 0x05, 0x47, 0x68, 0x6f,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x47, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x47,
	0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x53, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x4f, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x41, 0x72, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x44, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x49, 0x44, 0x12, 0x34, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x0a, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22,
	0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x22, 0x6a, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x34, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e,
	0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3f,
	0x0a, 0x11, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x45, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x2a,
	0x2c, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x09,
	0x0a, 0x05, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44, 0x4d,
	0x49, 0x4e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x42, 0x09, 0x5a,
	0x07, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ghost_ghost_proto_rawDescOnce sync.Once
	file_ghost_ghost_proto_rawDescData = file_ghost_ghost_proto_rawDesc
)

func file_ghost_ghost_proto_rawDescGZIP() []byte {
	file_ghost_ghost_proto_rawDescOnce.Do(func() {
		file_ghost_ghost_proto_rawDescData = protoimpl.X.CompressGZIP(file_ghost_ghost_proto_rawDescData)
	})
	return file_ghost_ghost_proto_rawDescData
}

var file_ghost_ghost_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ghost_ghost_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ghost_ghost_proto_goTypes = []interface{}{
	(Permissions)(0),                 // 0: ghost.Permissions
	(*Ghost)(nil),                    // 1: ghost.Ghost
	(*ChangePermissionsRequest)(nil), // 2: ghost.ChangePermissionsRequest
	(*ChangePermissions)(nil),        // 3: ghost.ChangePermissions
	(*transport.Transport)(nil),      // 4: transport.Transport
	(*server.User)(nil),              // 5: server.User
}
var file_ghost_ghost_proto_depIdxs = []int32{
	4, // 0: ghost.Ghost.Transports:type_name -> transport.Transport
	0, // 1: ghost.Ghost.Permissions:type_name -> ghost.Permissions
	5, // 2: ghost.Ghost.Owner:type_name -> server.User
	0, // 3: ghost.ChangePermissionsRequest.Permissions:type_name -> ghost.Permissions
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_ghost_ghost_proto_init() }
func file_ghost_ghost_proto_init() {
	if File_ghost_ghost_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ghost_ghost_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ghost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_ghost_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePermissionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_ghost_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePermissions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ghost_ghost_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ghost_ghost_proto_goTypes,
		DependencyIndexes: file_ghost_ghost_proto_depIdxs,
		EnumInfos:         file_ghost_ghost_proto_enumTypes,
		MessageInfos:      file_ghost_ghost_proto_msgTypes,
	}.Build()
	File_ghost_ghost_proto = out.File
	file_ghost_ghost_proto_rawDesc = nil
	file_ghost_ghost_proto_goTypes = nil
	file_ghost_ghost_proto_depIdxs = nil
}
