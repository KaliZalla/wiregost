// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.8.0
// source: ghost/core/execute.proto

package corepb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// shellcode task
type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoder   string `protobuf:"bytes,1,opt,name=Encoder,proto3" json:"Encoder,omitempty"`
	RWXPages  bool   `protobuf:"varint,2,opt,name=RWXPages,proto3" json:"RWXPages,omitempty"`
	PID       uint32 `protobuf:"varint,3,opt,name=PID,proto3" json:"PID,omitempty"`
	Shellcode []byte `protobuf:"bytes,4,opt,name=Shellcode,proto3" json:"Shellcode,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{0}
}

func (x *Task) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *Task) GetRWXPages() bool {
	if x != nil {
		return x.RWXPages
	}
	return false
}

func (x *Task) GetPID() uint32 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *Task) GetShellcode() []byte {
	if x != nil {
		return x.Shellcode
	}
	return nil
}

type RemoteTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoder   string `protobuf:"bytes,1,opt,name=Encoder,proto3" json:"Encoder,omitempty"`
	RWXPages  bool   `protobuf:"varint,2,opt,name=RWXPages,proto3" json:"RWXPages,omitempty"`
	PID       uint32 `protobuf:"varint,3,opt,name=PID,proto3" json:"PID,omitempty"`
	Shellcode []byte `protobuf:"bytes,4,opt,name=Shellcode,proto3" json:"Shellcode,omitempty"`
}

func (x *RemoteTask) Reset() {
	*x = RemoteTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteTask) ProtoMessage() {}

func (x *RemoteTask) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteTask.ProtoReflect.Descriptor instead.
func (*RemoteTask) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{1}
}

func (x *RemoteTask) GetEncoder() string {
	if x != nil {
		return x.Encoder
	}
	return ""
}

func (x *RemoteTask) GetRWXPages() bool {
	if x != nil {
		return x.RWXPages
	}
	return false
}

func (x *RemoteTask) GetPID() uint32 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *RemoteTask) GetShellcode() []byte {
	if x != nil {
		return x.Shellcode
	}
	return nil
}

// execute
type ExecuteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID uint32   `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	Path    string   `protobuf:"bytes,2,opt,name=Path,proto3" json:"Path,omitempty"`
	Args    []string `protobuf:"bytes,3,rep,name=Args,proto3" json:"Args,omitempty"`
	Output  bool     `protobuf:"varint,4,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *ExecuteRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ExecuteRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ExecuteRequest) GetOutput() bool {
	if x != nil {
		return x.Output
	}
	return false
}

type Execute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error  string `protobuf:"bytes,1,opt,name=Error,proto3" json:"Error,omitempty"`
	Result string `protobuf:"bytes,2,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *Execute) Reset() {
	*x = Execute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execute) ProtoMessage() {}

func (x *Execute) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execute.ProtoReflect.Descriptor instead.
func (*Execute) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{3}
}

func (x *Execute) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *Execute) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

// execute-assembly
type ExecuteAssemblyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID    uint32   `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	HostingDLL []byte   `protobuf:"bytes,2,opt,name=HostingDLL,proto3" json:"HostingDLL,omitempty"`
	Assembly   []byte   `protobuf:"bytes,3,opt,name=Assembly,proto3" json:"Assembly,omitempty"`
	Arguments  []string `protobuf:"bytes,4,rep,name=Arguments,proto3" json:"Arguments,omitempty"`
	Process    string   `protobuf:"bytes,5,opt,name=Process,proto3" json:"Process,omitempty"`
	Timeout    int32    `protobuf:"varint,6,opt,name=Timeout,proto3" json:"Timeout,omitempty"`
}

func (x *ExecuteAssemblyRequest) Reset() {
	*x = ExecuteAssemblyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteAssemblyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAssemblyRequest) ProtoMessage() {}

func (x *ExecuteAssemblyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAssemblyRequest.ProtoReflect.Descriptor instead.
func (*ExecuteAssemblyRequest) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteAssemblyRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *ExecuteAssemblyRequest) GetHostingDLL() []byte {
	if x != nil {
		return x.HostingDLL
	}
	return nil
}

func (x *ExecuteAssemblyRequest) GetAssembly() []byte {
	if x != nil {
		return x.Assembly
	}
	return nil
}

func (x *ExecuteAssemblyRequest) GetArguments() []string {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *ExecuteAssemblyRequest) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *ExecuteAssemblyRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

type ExecuteAssembly struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ExecuteAssembly) Reset() {
	*x = ExecuteAssembly{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteAssembly) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteAssembly) ProtoMessage() {}

func (x *ExecuteAssembly) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteAssembly.ProtoReflect.Descriptor instead.
func (*ExecuteAssembly) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{5}
}

func (x *ExecuteAssembly) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *ExecuteAssembly) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// sideload-dll
type SideloadDllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID uint32 `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	DLL     []byte `protobuf:"bytes,2,opt,name=DLL,proto3" json:"DLL,omitempty"`
	Process string `protobuf:"bytes,3,opt,name=Process,proto3" json:"Process,omitempty"`
}

func (x *SideloadDllRequest) Reset() {
	*x = SideloadDllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideloadDllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideloadDllRequest) ProtoMessage() {}

func (x *SideloadDllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideloadDllRequest.ProtoReflect.Descriptor instead.
func (*SideloadDllRequest) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{6}
}

func (x *SideloadDllRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *SideloadDllRequest) GetDLL() []byte {
	if x != nil {
		return x.DLL
	}
	return nil
}

func (x *SideloadDllRequest) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

type SideloadDll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *SideloadDll) Reset() {
	*x = SideloadDll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SideloadDll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SideloadDll) ProtoMessage() {}

func (x *SideloadDll) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SideloadDll.ProtoReflect.Descriptor instead.
func (*SideloadDll) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{7}
}

func (x *SideloadDll) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *SideloadDll) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// spawn-dll
type SpawnDllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID uint32   `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	DLL     []byte   `protobuf:"bytes,2,opt,name=DLL,proto3" json:"DLL,omitempty"`
	Process string   `protobuf:"bytes,3,opt,name=Process,proto3" json:"Process,omitempty"`
	Offset  string   `protobuf:"bytes,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Args    []string `protobuf:"bytes,5,rep,name=Args,proto3" json:"Args,omitempty"`
}

func (x *SpawnDllRequest) Reset() {
	*x = SpawnDllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnDllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnDllRequest) ProtoMessage() {}

func (x *SpawnDllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnDllRequest.ProtoReflect.Descriptor instead.
func (*SpawnDllRequest) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{8}
}

func (x *SpawnDllRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *SpawnDllRequest) GetDLL() []byte {
	if x != nil {
		return x.DLL
	}
	return nil
}

func (x *SpawnDllRequest) GetProcess() string {
	if x != nil {
		return x.Process
	}
	return ""
}

func (x *SpawnDllRequest) GetOffset() string {
	if x != nil {
		return x.Offset
	}
	return ""
}

func (x *SpawnDllRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

type SpawnDll struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Output string `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *SpawnDll) Reset() {
	*x = SpawnDll{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_execute_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpawnDll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpawnDll) ProtoMessage() {}

func (x *SpawnDll) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_execute_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpawnDll.ProtoReflect.Descriptor instead.
func (*SpawnDll) Descriptor() ([]byte, []int) {
	return file_ghost_core_execute_proto_rawDescGZIP(), []int{9}
}

func (x *SpawnDll) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *SpawnDll) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_ghost_core_execute_proto protoreflect.FileDescriptor

var file_ghost_core_execute_proto_rawDesc = []byte{
	0x0a, 0x18, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x6c, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x57, 0x58, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x52, 0x57, 0x58, 0x50,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x50, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x65, 0x6c, 0x6c, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53, 0x68, 0x65, 0x6c, 0x6c,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x52, 0x57, 0x58, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x52, 0x57, 0x58, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x50, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x50, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68,
	0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x53,
	0x68, 0x65, 0x6c, 0x6c, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6a, 0x0a, 0x0e, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68,
	0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x72, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x37, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc0, 0x01,
	0x0a, 0x16, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x4c, 0x4c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x44,
	0x4c, 0x4c, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x3f, 0x0a, 0x0f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x6d,
	0x62, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5a, 0x0a, 0x12, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x4c, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x44, 0x4c, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a,
	0x0b, 0x53, 0x69, 0x64, 0x65, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x53,
	0x70, 0x61, 0x77, 0x6e, 0x44, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x47, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x4c, 0x4c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x44, 0x4c, 0x4c, 0x12, 0x18, 0x0a, 0x07, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x41, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x41, 0x72, 0x67, 0x73,
	0x22, 0x38, 0x0a, 0x08, 0x53, 0x70, 0x61, 0x77, 0x6e, 0x44, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06,
	0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x42, 0x08, 0x5a, 0x06, 0x63, 0x6f,
	0x72, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ghost_core_execute_proto_rawDescOnce sync.Once
	file_ghost_core_execute_proto_rawDescData = file_ghost_core_execute_proto_rawDesc
)

func file_ghost_core_execute_proto_rawDescGZIP() []byte {
	file_ghost_core_execute_proto_rawDescOnce.Do(func() {
		file_ghost_core_execute_proto_rawDescData = protoimpl.X.CompressGZIP(file_ghost_core_execute_proto_rawDescData)
	})
	return file_ghost_core_execute_proto_rawDescData
}

var file_ghost_core_execute_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_ghost_core_execute_proto_goTypes = []interface{}{
	(*Task)(nil),                   // 0: ghost.core.Task
	(*RemoteTask)(nil),             // 1: ghost.core.RemoteTask
	(*ExecuteRequest)(nil),         // 2: ghost.core.ExecuteRequest
	(*Execute)(nil),                // 3: ghost.core.Execute
	(*ExecuteAssemblyRequest)(nil), // 4: ghost.core.ExecuteAssemblyRequest
	(*ExecuteAssembly)(nil),        // 5: ghost.core.ExecuteAssembly
	(*SideloadDllRequest)(nil),     // 6: ghost.core.SideloadDllRequest
	(*SideloadDll)(nil),            // 7: ghost.core.SideloadDll
	(*SpawnDllRequest)(nil),        // 8: ghost.core.SpawnDllRequest
	(*SpawnDll)(nil),               // 9: ghost.core.SpawnDll
}
var file_ghost_core_execute_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ghost_core_execute_proto_init() }
func file_ghost_core_execute_proto_init() {
	if File_ghost_core_execute_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ghost_core_execute_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteAssemblyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteAssembly); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideloadDllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SideloadDll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnDllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_execute_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpawnDll); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ghost_core_execute_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ghost_core_execute_proto_goTypes,
		DependencyIndexes: file_ghost_core_execute_proto_depIdxs,
		MessageInfos:      file_ghost_core_execute_proto_msgTypes,
	}.Build()
	File_ghost_core_execute_proto = out.File
	file_ghost_core_execute_proto_rawDesc = nil
	file_ghost_core_execute_proto_goTypes = nil
	file_ghost_core_execute_proto_depIdxs = nil
}
