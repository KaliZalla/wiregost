// Wiregost - Golang Exploitation Framework
// Copyright Â© 2020 Para
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.8.0
// source: ghost/core/net.proto

package corepb

import (
	db "../gen/go/db"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// NetInterface - A network interface on the implant's target
type NetInterface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       int32         `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Name        string        `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	MAC         string        `protobuf:"bytes,3,opt,name=MAC,proto3" json:"MAC,omitempty"`
	IPAddresses []*db.Address `protobuf:"bytes,4,rep,name=IPAddresses,proto3" json:"IPAddresses,omitempty"` // When server receives them, it parses them into net.IPAddr objects before using them.
}

func (x *NetInterface) Reset() {
	*x = NetInterface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetInterface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetInterface) ProtoMessage() {}

func (x *NetInterface) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetInterface.ProtoReflect.Descriptor instead.
func (*NetInterface) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{0}
}

func (x *NetInterface) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *NetInterface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NetInterface) GetMAC() string {
	if x != nil {
		return x.MAC
	}
	return ""
}

func (x *NetInterface) GetIPAddresses() []*db.Address {
	if x != nil {
		return x.IPAddresses
	}
	return nil
}

type IfConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID uint32 `protobuf:"varint,1,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
}

func (x *IfConfigRequest) Reset() {
	*x = IfConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfConfigRequest) ProtoMessage() {}

func (x *IfConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfConfigRequest.ProtoReflect.Descriptor instead.
func (*IfConfigRequest) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{1}
}

func (x *IfConfigRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

type IfConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetInterfaces []*NetInterface `protobuf:"bytes,1,rep,name=NetInterfaces,proto3" json:"NetInterfaces,omitempty"`
}

func (x *IfConfig) Reset() {
	*x = IfConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IfConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IfConfig) ProtoMessage() {}

func (x *IfConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IfConfig.ProtoReflect.Descriptor instead.
func (*IfConfig) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{2}
}

func (x *IfConfig) GetNetInterfaces() []*NetInterface {
	if x != nil {
		return x.NetInterfaces
	}
	return nil
}

// netstat
type SocketTabEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalAddr  *SocketAddr `protobuf:"bytes,1,opt,name=LocalAddr,proto3" json:"LocalAddr,omitempty"`
	RemoteAddr *SocketAddr `protobuf:"bytes,2,opt,name=RemoteAddr,proto3" json:"RemoteAddr,omitempty"`
	State      string      `protobuf:"bytes,3,opt,name=State,proto3" json:"State,omitempty"`
	UID        uint32      `protobuf:"varint,4,opt,name=UID,proto3" json:"UID,omitempty"`
	Process    *Process    `protobuf:"bytes,5,opt,name=Process,proto3" json:"Process,omitempty"` // The process owning the socket
	Protocol   string      `protobuf:"bytes,6,opt,name=Protocol,proto3" json:"Protocol,omitempty"`
}

func (x *SocketTabEntry) Reset() {
	*x = SocketTabEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocketTabEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketTabEntry) ProtoMessage() {}

func (x *SocketTabEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketTabEntry.ProtoReflect.Descriptor instead.
func (*SocketTabEntry) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{3}
}

func (x *SocketTabEntry) GetLocalAddr() *SocketAddr {
	if x != nil {
		return x.LocalAddr
	}
	return nil
}

func (x *SocketTabEntry) GetRemoteAddr() *SocketAddr {
	if x != nil {
		return x.RemoteAddr
	}
	return nil
}

func (x *SocketTabEntry) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SocketTabEntry) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

func (x *SocketTabEntry) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *SocketTabEntry) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type SocketAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IP   string `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	Port uint32 `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
}

func (x *SocketAddr) Reset() {
	*x = SocketAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocketAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocketAddr) ProtoMessage() {}

func (x *SocketAddr) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocketAddr.ProtoReflect.Descriptor instead.
func (*SocketAddr) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{4}
}

func (x *SocketAddr) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *SocketAddr) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type NetstatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GhostID   uint32 `protobuf:"varint,9,opt,name=GhostID,proto3" json:"GhostID,omitempty"`
	TCP       bool   `protobuf:"varint,1,opt,name=TCP,proto3" json:"TCP,omitempty"`
	UDP       bool   `protobuf:"varint,2,opt,name=UDP,proto3" json:"UDP,omitempty"`
	IP4       bool   `protobuf:"varint,3,opt,name=IP4,proto3" json:"IP4,omitempty"`
	IP6       bool   `protobuf:"varint,4,opt,name=IP6,proto3" json:"IP6,omitempty"`
	Listening bool   `protobuf:"varint,5,opt,name=Listening,proto3" json:"Listening,omitempty"` // Maybe we can grab the REUSEPORT/REUSEADDR option value
}

func (x *NetstatRequest) Reset() {
	*x = NetstatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetstatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetstatRequest) ProtoMessage() {}

func (x *NetstatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetstatRequest.ProtoReflect.Descriptor instead.
func (*NetstatRequest) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{5}
}

func (x *NetstatRequest) GetGhostID() uint32 {
	if x != nil {
		return x.GhostID
	}
	return 0
}

func (x *NetstatRequest) GetTCP() bool {
	if x != nil {
		return x.TCP
	}
	return false
}

func (x *NetstatRequest) GetUDP() bool {
	if x != nil {
		return x.UDP
	}
	return false
}

func (x *NetstatRequest) GetIP4() bool {
	if x != nil {
		return x.IP4
	}
	return false
}

func (x *NetstatRequest) GetIP6() bool {
	if x != nil {
		return x.IP6
	}
	return false
}

func (x *NetstatRequest) GetListening() bool {
	if x != nil {
		return x.Listening
	}
	return false
}

type Netstat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*SocketTabEntry `protobuf:"bytes,1,rep,name=Entries,proto3" json:"Entries,omitempty"`
}

func (x *Netstat) Reset() {
	*x = Netstat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ghost_core_net_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Netstat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Netstat) ProtoMessage() {}

func (x *Netstat) ProtoReflect() protoreflect.Message {
	mi := &file_ghost_core_net_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Netstat.ProtoReflect.Descriptor instead.
func (*Netstat) Descriptor() ([]byte, []int) {
	return file_ghost_core_net_proto_rawDescGZIP(), []int{6}
}

func (x *Netstat) GetEntries() []*SocketTabEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

var File_ghost_core_net_proto protoreflect.FileDescriptor

var file_ghost_core_net_proto_rawDesc = []byte{
	0x0a, 0x14, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6e, 0x65, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x1a, 0x15, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x64, 0x62, 0x2f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x0c, 0x4e,
	0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x41, 0x43, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x41, 0x43, 0x12, 0x2d, 0x0a, 0x0b, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x64,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x49, 0x50, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x2b, 0x0a, 0x0f, 0x49, 0x66, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f,
	0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x22, 0x4a, 0x0a, 0x08, 0x49, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x3e, 0x0a, 0x0d, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x52, 0x0d, 0x4e, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22,
	0xf1, 0x01, 0x0a, 0x0e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x61, 0x62, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x34, 0x0a, 0x09, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x52, 0x09, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x12, 0x36, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x41, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67,
	0x68, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x52, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x68, 0x6f, 0x73,
	0x74, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x07,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x22, 0x30, 0x0a, 0x0a, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x50, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x4e, 0x65, 0x74, 0x73, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x68, 0x6f, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x47, 0x68, 0x6f, 0x73, 0x74,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x03, 0x54, 0x43, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x55, 0x44, 0x50, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x50, 0x34, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x03, 0x49, 0x50, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x50, 0x36, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x49, 0x50, 0x36, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x69,
	0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x3f, 0x0a, 0x07, 0x4e, 0x65, 0x74, 0x73,
	0x74, 0x61, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x68, 0x6f, 0x73, 0x74, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x54, 0x61, 0x62, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x08, 0x5a, 0x06, 0x63, 0x6f, 0x72,
	0x65, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ghost_core_net_proto_rawDescOnce sync.Once
	file_ghost_core_net_proto_rawDescData = file_ghost_core_net_proto_rawDesc
)

func file_ghost_core_net_proto_rawDescGZIP() []byte {
	file_ghost_core_net_proto_rawDescOnce.Do(func() {
		file_ghost_core_net_proto_rawDescData = protoimpl.X.CompressGZIP(file_ghost_core_net_proto_rawDescData)
	})
	return file_ghost_core_net_proto_rawDescData
}

var file_ghost_core_net_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ghost_core_net_proto_goTypes = []interface{}{
	(*NetInterface)(nil),    // 0: ghost.core.NetInterface
	(*IfConfigRequest)(nil), // 1: ghost.core.IfConfigRequest
	(*IfConfig)(nil),        // 2: ghost.core.IfConfig
	(*SocketTabEntry)(nil),  // 3: ghost.core.SocketTabEntry
	(*SocketAddr)(nil),      // 4: ghost.core.SocketAddr
	(*NetstatRequest)(nil),  // 5: ghost.core.NetstatRequest
	(*Netstat)(nil),         // 6: ghost.core.Netstat
	(*db.Address)(nil),      // 7: db.Address
	(*Process)(nil),         // 8: ghost.core.Process
}
var file_ghost_core_net_proto_depIdxs = []int32{
	7, // 0: ghost.core.NetInterface.IPAddresses:type_name -> db.Address
	0, // 1: ghost.core.IfConfig.NetInterfaces:type_name -> ghost.core.NetInterface
	4, // 2: ghost.core.SocketTabEntry.LocalAddr:type_name -> ghost.core.SocketAddr
	4, // 3: ghost.core.SocketTabEntry.RemoteAddr:type_name -> ghost.core.SocketAddr
	8, // 4: ghost.core.SocketTabEntry.Process:type_name -> ghost.core.Process
	3, // 5: ghost.core.Netstat.Entries:type_name -> ghost.core.SocketTabEntry
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ghost_core_net_proto_init() }
func file_ghost_core_net_proto_init() {
	if File_ghost_core_net_proto != nil {
		return
	}
	file_ghost_core_proc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ghost_core_net_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetInterface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_net_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_net_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IfConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_net_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocketTabEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_net_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocketAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_net_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetstatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ghost_core_net_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Netstat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ghost_core_net_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ghost_core_net_proto_goTypes,
		DependencyIndexes: file_ghost_core_net_proto_depIdxs,
		MessageInfos:      file_ghost_core_net_proto_msgTypes,
	}.Build()
	File_ghost_core_net_proto = out.File
	file_ghost_core_net_proto_rawDesc = nil
	file_ghost_core_net_proto_goTypes = nil
	file_ghost_core_net_proto_depIdxs = nil
}
