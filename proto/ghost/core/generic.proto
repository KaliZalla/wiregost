syntax = "proto3";

package ghost.core;
option go_package = "ghost/core";       // Include the package ghost/core at compile time.

import "ghost/transport/transport.proto"

// Register - Implant calls back to C2 Server and sends its information.
message Register {
        Info Information = 1;
}

// Ping - Test ghost connection
message Ping {
        int32 Nonce = 1;
}

// KillRequest - Kills the ghost executable and connection 
message KillRequest {
        uint32 GhostID = 1;
        bool Force = 1;
} 

// Kill - Sends back status on implant kill
message Kill {
        bool Success = 1;
        string Warning = 2;                 // If force kill, will kill anyway but send a warning instead of an error
        string Err = 3;                     // Sends an error if kill was not force and there things still running
}

// Info - Send back multiple informations at once.
message Info {

        string Name = 1;
        HostName hostName = 2;
        UserName Username = 3;                          
        string UID = 4;
        string GID = 5;
        string OS = 6;
        string Arch = 7;
        int32 PID = 8;
        string Filename = 9;
        string Version = 10;
        string CurrentDir = 11;                 
        uint32 WorkspaceID = 12; 

        repeated transport.Transport Transports = 14;   // Available C2 transports

        repeated NetInterface Interfaces = 15;          // Network
        string CurrentDir = 16;                         // Current working directory
        repeated User Users = 17;                       // Get all users on host.

        repeated SocketTabEntry Netstat = 18;           // Maybe we can use this to automatically devise some better ports to use for routing/etc

        // repeated Route Routes = 19;                  // We might send current route listeners, in case.
}
