syntax = "proto3";

package transport;
option go_package = "ghost/transport";

// The ghost implant can change either the connection address and/or the transport protocol used.
// These are requests and responses to do so.

// ChangeTransportRequest - Request an implant to connect with new transport settings
message ChangeTransportRequest {
        uint32 GhostID = 1;

        string Protocol = 2;
        string LHost = 3;
        string LPort = 4;
        bool Force = 5;
}

message ChangeTransport {
        bool Success = 1;
        string Warning = 2;         // If force true, send a warning message (other routes passing through) 
        string Err = 3;             // If force false, send the warning as an error, and Success false
}

// Essentially, a transport request is either starting a reverse or a bind handler with different proto/address
message AddTransportRequest {
        uint32 GhostID = 1;

        enum Protocol {             // Identify Protocol
                MTLS = 0;
                DNS = 1;
                HTTP = 2;
                QUIC = 3;
                KCP = 4;
                PIPE = 5;
        }

        enum Type {                 // Do we start a listener on the implant, or do we reach back another address ?
                REVERSE = 0;
                BIND = 1;
        }

        // Either we add all common options for all protocols here
        string RHost = 10;
        string RPort = 11;



        // Or we put Transport message types here, and all but one can be empty
        HTTP Http = 3;          // Either of these fields can be empty, except one.
        DNS Dns = 4;
        QUIC Quic = 5;
        KCP Kcp = 6
        MTLS Mtls = 7;
        NamedPipe Pipe = 8;
}

message AddTransport {
        bool Success = 1;
        string Err = 2;
}

// DeleteTransportRequest - Delete one or more transports from the implant transport list
message DeleteTransportRequest {
        uint32 GhostID = 1;

        int32 TransportID = 5           // If TransportID != 0 delete based on ID
        string Protocol = 2;            // Else, kill all matches
        string LHost = 3;
        string LPort = 4;
}

message DeleteTransport {
        bool Success = 1;
        string Err = 2;
}
